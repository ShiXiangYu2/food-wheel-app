# 今日吃啥转盘应用开发需求

## 项目目标

开发一个响应式"今日吃啥"转盘网页应用，帮助用户随机决定吃什么。用户可以添加自定义菜谱或从推荐菜谱中选择，通过旋转转盘随机选出一个结果。

## 技术栈

-**前端框架**: Next.js (App Router)
-**开发语言**: TypeScript
-**样式处理**: Tailwind CSS
-**数据存储**: Supabase

## 功能需求

1.**菜谱管理**
   - 系统预置流行菜谱列表
   - 用户可添加自定义菜谱
   - 用户可从流行菜谱列表中选择添加到转盘
   - 用户可删除转盘中的菜谱
   - 每个转盘最多支持12个菜谱

2.**转盘功能**
   - 根据用户添加的菜谱动态生成转盘
   - 每个菜谱使用不同颜色区分
   - 点击按钮触发转盘旋转动画
   - 旋转结束后显示随机选中的结果

3.**用户系统**
   - 免登录设计，使用UUID生成唯一用户ID
   - 用户ID存储在LocalStorage中实现持久化
   - 首次访问自动生成用户ID并初始化

4.**响应式设计**
   - 适配移动端、平板和桌面设备
   - 不同设备有合适的布局和交互方式

## 数据存储设计

### 主要数据结构

-**用户表(users)**：存储用户的唯一标识和创建时间
- **流行菜谱表(popular_recipes)**：系统预置的菜谱列表，包含菜谱ID和名称
- **用户自定义菜谱表(user_custom_recipes)**：用户自己创建的菜谱，包含用户ID和菜谱名称
- **用户转盘项目表(user_wheel_items)**：用户添加到转盘的菜谱，包含用户ID、菜谱名称、来源类型和颜色

### 数据关系说明

1. **流行菜谱**：系统预置，所有用户共享，用户不能修改
2. **自定义菜谱**：每个用户可以创建自己的菜谱
3. **转盘项目**：用户可以将流行菜谱或自定义菜谱添加到自己的转盘中
4. **唯一性规则**：同一用户的转盘中不允许有重名菜谱

## 业务逻辑设计

1. **用户标识处理**
   - 首次访问时生成UUID并存储到LocalStorage
   - 后续访问时从LocalStorage获取用户ID
   - 如果获取失败则重新生成

2. **菜谱数据管理**
   - 加载时获取用户转盘项目和流行菜谱
   - 添加自定义菜谱时先检查是否存在，再创建
   - 添加流行菜谱到转盘时创建关联记录
   - 删除操作仅移除用户与菜谱的关联

3. **转盘逻辑**
   - 根据用户的转盘项目数据动态生成转盘
   - 转盘旋转使用CSS动画实现
   - 随机选择结果并控制转盘停止位置
   - 结果展示与高亮处理

## 用户体验设计

1. **页面布局**
   - 顶部：应用标题和简短说明
   - 中部：转盘组件和结果显示
   - 底部/侧边：菜谱管理界面

2. **交互设计**
   - 转盘中心有明显的旋转按钮
   - 添加菜谱表单简洁直观
   - 流行菜谱可快速选择添加
   - 已添加菜谱可一键删除

3. **响应式适配**
   - 移动端：垂直布局，转盘在上，菜谱管理在下
   - 平板/桌面：水平布局，转盘在左，菜谱管理在右
   - 转盘大小根据屏幕尺寸自动调整

## 实施步骤

### 1. 项目初始化与环境配置

```bash
# 创建Next.js项目
npx create-next-app food-wheel-app --typescript
cd food-wheel-app

# 安装依赖
npm install @supabase/supabase-js uuid
npm install -D @types/uuid

# 配置Tailwind CSS (已包含在Next.js项目中)
```

### 2. 数据库设置

1. 创建Supabase项目
2. 创建必要的数据表
3. 初始化流行菜谱数据
4. 设置适当的访问权限

### 3. 项目结构搭建

1. 创建基础目录结构
2. 配置Supabase客户端
3. 实现用户ID生成和管理功能

### 4. 组件开发

1. 创建转盘组件
   - SVG实现转盘视觉效果
   - 旋转动画和结果选择逻辑

2. 创建菜谱管理组件
   - 自定义菜谱添加表单
   - 流行菜谱选择列表
   - 已添加菜谱展示和删除

3. 实现页面布局和响应式设计

### 5. 数据交互实现

1. 用户数据初始化
2. 菜谱数据CRUD操作
3. 转盘数据与视图绑定

### 6. 优化与测试

1. 性能优化
2. 跨设备测试
3. 边缘情况处理

## 验收标准

1. 转盘能正确显示用户添加的菜谱
2. 转盘旋转动画流畅，结果选择随机有效
3. 菜谱管理功能正常工作
4. 用户数据正确持久化
5. 在不同设备上显示正常且交互友好